<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Delivery Information - mintoSpeed</title>
    <!-- google font -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;500;600;700;800&display=swap"
        rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Khula:wght@400;600;700;800&display=swap" rel="stylesheet" />
    <!--Font awesome icon-->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">

</head>

<body>
    <!-- alertboxAndLoader -->
    <%- include('partials/alertboxAndLoader') %>
    <%- include('partials/popupBox') %>


       <section class="container">
        <div class="container2">
            <% if (typeof userData != 'undefined') { %>

            <div class="logo"><a href="/">minto<span>Speed</span></a></div>
            <header>Delivery Information</header>
            <br />

            <!--  -->
            <form action="#" class="form">
                <div class="input-box">
                    <label>Full Name</label>
                    <input type="text" id="fullName" value="<%= userData !== 'undefined' && userData.name ? userData.name : '' %>"
                        placeholder="Enter full name" required />
                </div>

                <div class="column" style="flex-wrap: nowrap;">
                    <div class="input-box">
                        <label>Email Address</label>
                        <input type="email" id="email" value="<%= userData !== 'undefined' && userData.email ? userData.email : '' %>"
                            placeholder="Enter Email Address" required />
                    </div>
                   
                </div>


                <div class="column" style="flex-wrap: nowrap;">
                    <div class="input-box">
                        <label>Phone Number</label>
                        <input type="number" id="phone" value="<%= userData !== 'undefined' && userData.phone ? userData.phone : '' %>"
                            placeholder="Enter phone number" required />
                    </div>
                    
                </div>

                

                <div class="input-box address">
                    <label>Address</label>
                    <input type="text" id="streetAddress"
                        value="<%= userData !== 'undefined' && userData.streetAddress ? userData.streetAddress : '' %>"
                        placeholder="Enter street address" required />
                    <div class="column">
                        <input type="text" id="city" value="<%= userData !== 'undefined' && userData.city ? userData.city : '' %>"
                            placeholder="Enter your city" required />
                        <input type="number" id="pincode"
                            value="<%= userData !== 'undefined' && userData.pincode ? userData.pincode : '' %>"
                            placeholder="Enter pincode" required />
                    </div>
                    
                </div>

                <br />

                <!-- Payment Mode Section -->
                <div class="pmode_box" id="paymentMode">
                    <h3 style="margin-bottom: 15px;">Total : <span>â‚¹ <%= totalPrice %></span>&nbsp;(<span><%= totalItems %></span>&nbsp;items)</h3>
                    <h3>Payment mode</h3>
                    <div class="pmode_option">
                        <!-- <div class="pmode">
                            <input type="radio" id="online" name="pmode" value="online" checked />
                            <label for="online">Online</label>
                        </div> -->
                        <div class="pmode">
                            <input type="radio" id="cod" name="pmode" value="cod" checked/>
                            <label for="cod">COD (Cash On Delivery)</label>
                        </div>
                    </div>
                </div>

                <input type="text" value="<%= orderId %>" id="orderId" class="hidden" />
                <input type="text" value="<%= userData !== 'undefined' ? 'true' : 'false' %>" id="isUserExit" class="hidden" />

                <button class="orderBtn">Order</button>
            </form>

            <% } else { %>
                <p style="text-align: center; margin-top: 50px; margin-bottom: 100px;">No order found.</p>
            <% } %>        
        </div>
       </section>

        <script nonce="<%-nonce%>">
            document.addEventListener("DOMContentLoaded", () => {
                const form = document.querySelector(".form");

                form.addEventListener("submit", async (e) => {
                    e.preventDefault(); // Prevent form submission for validation
                    document.getElementById("loader_container").style.display = "flex";

                    let isValid = true;

                    // Fetch values using IDs
                    const fullName = document.getElementById("fullName").value.trim();
                    const email = document.getElementById("email").value.trim();
                    // const emailOtp = document.getElementById("emailOtp").value.trim();
                    const phone = document.getElementById("phone").value.trim();
                    // const phoneOtp = document.getElementById("phoneOtp").value.trim();
                    const streetAddress = document.getElementById("streetAddress").value.trim();
                    const city = document.getElementById("city").value.trim();
                    const pincode = document.getElementById("pincode").value.trim();
                    // const district = document.getElementById("district").value;
                    // const state = document.getElementById("state").value;
                    const orderId = document.getElementById("orderId").value;
                    const isUserExit = document.getElementById("isUserExit").value;
                    const paymentMode = document.querySelector('input[name="pmode"]:checked').value;



                    let validateInput = (input) => typeof input === 'string' && /^[a-zA-Z0-9_\- &,.]+$/.test(input);
                    let validateNumberInput = (input, length) => typeof input === 'string' && /^\d+$/.test(input) && input.length === length;
                    let validateEmail = (input) => typeof input === 'string' && /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(input);
                    let validatePaymentMode = (input) => {
                        return typeof input === 'string' && ['online', 'cod'].includes(input.toLowerCase());
                    };


                    // Full Name Validation
                    if (!validateInput(fullName)) {
                        showAlert("Full Name is required", "negative");
                        document.getElementById("loader_container").style.display = "none";
                        isValid = false;
                    }

                    // Email Validation
                    if (!validateEmail(email)) {
                        showAlert("Please enter a valid email address", "negative");
                        isValid = false;
                        document.getElementById("loader_container").style.display = "none";

                    }

                    // if (!validateInput(orderId) || !validateInput(isUserExit)) {
                    //     showAlert("Something went wrong to get some data. Please refresh the page and try again.", "negative");
                    //     isValid = false;
                    //     document.getElementById("loader_container").style.display = "none";

                    // }

                    // if (isUserExit == "false") {
                    //     // OTP Validations (6 digits)
                    //     if (!validateNumberInput(emailOtp, 6)) {
                    //         showAlert("Please enter a 6-digit OTP for Email", "negative");
                    //         isValid = false;
                    //         document.getElementById("loader_container").style.display = "none";

                    //     }

                    //     if (!validateNumberInput(phoneOtp, 6)) {
                    //         showAlert("Please enter a 6-digit OTP for Phone", "negative");
                    //         isValid = false;
                    //         document.getElementById("loader_container").style.display = "none";

                    //     }
                    // }

                    // Phone Number Validation (10 digits)
                    if (!validateNumberInput(phone, 10)) {
                        showAlert("Please enter a valid 10-digit phone number", "negative");
                        isValid = false;
                        document.getElementById("loader_container").style.display = "none";
                    }

                    // Address Validation
                    if (!validateInput(streetAddress)) {
                        showAlert("Street address must be at least 5 characters", "negative");
                        isValid = false;
                        document.getElementById("loader_container").style.display = "none";
                    }

                    if (!validateInput(city)) {
                        showAlert("City is required", "negative");
                        isValid = false;
                        document.getElementById("loader_container").style.display = "none";
                    }

                    // if (!validateInput(state)) {
                    //     showAlert("State is required", "negative");
                    //     isValid = false;
                    //     document.getElementById("loader_container").style.display = "none";
                    // }

                    // Pincode Validation (6 digits)
                    if (!validateNumberInput(pincode, 6)) {
                        showAlert("Please enter a valid 6-digit pincode", "negative");
                        isValid = false;
                        document.getElementById("loader_container").style.display = "none";
                    }

                    // District Validation
                    // if (!validateInput(district)) {
                    //     showAlert("Please select a district", "negative");
                    //     isValid = false;
                    //     document.getElementById("loader_container").style.display = "none";
                    // }

                    // Payment Mode Validation
                    if (!validatePaymentMode(paymentMode)) {
                        showAlert("Please select a payment mode", "negative");
                        isValid = false;
                        document.getElementById("loader_container").style.display = "none";
                    }

                    if (isValid) {
                        // Collect data from the form
                        const formData = {
                            fullName, email, phone, streetAddress, city, pincode, orderId, paymentMode
                        };
                        console.log("formData : " + formData);


                        // Send data to backend using fetch
                        try {
                            const response = await fetch('/orderForm/order', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify(formData)
                            });

                            const result = await response.json();

                            if (result.type == "positive") {
                                const modal = document.getElementById('messageBoxid01');
                                const messageBoxHead = document.querySelector('.messageBoxHead');
                                const messageBoxP = document.querySelector('.messageBoxP');
                                const actionButtons = document.querySelector('.btnBoxContainer');
                                messageBoxHead.innerHTML = `<i style="margin-right: 10px" class="fa-regular fa-paper-plane"></i>Order Placed Successfully!`;
                                
                                messageBoxP.innerHTML = `<p>Your order placed successfully and will be deliver soon.</p>
                                <p>Go to profile to see your order status.</p>`;
                                
                                actionButtons.innerHTML = `<button type="button" class="messageBoxBtn" style="background-color: #cecece; color: black;"><a style="text-decoration: none; color: black;" href="/">Homepage</a></button>
                                <button type="button" class="messageBoxBtn" id="profileBtn"><a style="text-decoration: none; color: white;" href="/profile">Profile</a></button>`;

                                messageBoxHead.style.color = "#04711a";
                                document.getElementById("loader_container").style.display = "none";
                                document.getElementById("messageBoxClose").style.display = "none";
                                modal.style.display = 'flex';
                                
                            } else if (result.type == "negative") {
                                showAlert("Something went wrong. Please again order the item.", "negative");
                                setTimeout(() => {
                                    window.location.href = '/cart'; 
                                }, 5000);                             
                            }
                        } catch (error) {
                            console.error('Error:', error);
                            document.getElementById("loader_container").style.display = "none";
                            showAlert('An error occurred while placing the order. Please try again.', "negative");
                        }
                    }
                });
            });
        </script>




        <style>
            * {
                margin: 0;
                padding: 0;
                box-sizing: border-box;
                font-family: 'Open Sans', sans-serif;
            }

            body {
                background-color: rgb(243, 243, 243);
            }

            div.logo {
      margin: 15px;
      text-align: center;
    }

    div.logo>a {
        text-decoration: none;
      color: #0bb744;
      font-weight: 800;
      font-size: 22px;
    }

    div.logo>a span{
      color: rgb(19, 19, 19);
    }


    .container{
      position: fixed;
      width: 100%;
      height: 100vh;
      display: flex;
      justify-content: center;
      overflow: auto;
    }

    .container2 {
      position: relative;
      max-width: 550px;
      width: 550px;
      height: fit-content;
      background: #fff;
      padding: 20px;
      margin: 15px;
      border-radius: 8px;
      box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
    }
            .container2 header {
                font-size: 1.1rem;
                color: #4a4a4a;
                font-weight: 700;
                text-align: center;
                padding: 5px 10px 0 10px;
            }

            .container2 .form {
                margin-top: 10px;
            }

            .form .input-box {
                width: 100%;
                margin-top: 20px;
            }

            .input-box label {
                color: #333;
                font-size: 13px;
            }

            .form :where(.input-box input, .select-box) {
                position: relative;
                height: 40px;
                width: 100%;
                outline: none;
                font-size: 13px;
                color: #6b6b6b;
                margin-top: 5px;
                border: 1px solid #ddd;
                border-radius: 6px;
                padding: 0 10px;
                background-color: #fafafa;
            }

            .input-box input:focus {
                box-shadow: 0 1px 0 rgba(0, 0, 0, 0.1);
            }

            .form .column {
                display: flex;
                column-gap: 15px;
            }

            .form .pmode_box {
                margin-top: 10px;
                padding: 15px;
                background-color: rgb(188, 245, 195);
            }

            .pmode_box h3 {
                color: #333;
                font-size: 15px;
                font-weight: 400;
                margin-bottom: 8px;
            }

            .form :where(.pmode_option, .pmode) {
                display: flex;
                align-items: center;
                column-gap: 50px;
                flex-wrap: wrap;
                font-size: 15px;
            }

            .form .pmode {
                column-gap: 5px;
            }

            .pmode input {
                font-size: 15px;
                accent-color: rgb(67, 74, 69);
            }

            .form :where(.pmode input, .pmode label) {
                cursor: pointer;
                font-size: 15px;
            }

            .pmode label {
                color: #444444;
                font-size: 14px;
            }

            .address :where(input, .select-box) {
                margin-top: 15px;
                font-size: 15px;
            }

            .select-box select {
                height: 100%;
                width: 100%;
                outline: none;
                border: none;
                color: #525252;
                font-size: .9rem;
                background-color: #f6f6f6;

            }

            .orderBtn,
            .verifyOtpBtn,
            .timer {
                height: 55px;
                width: 100%;
                color: #fff;
                font-size: .9rem;
                font-weight: 400;
                margin-top: 25px;
                border: none;
                cursor: pointer;
                transition: all 0.2s ease;
                background: rgb(84, 213, 74);
            }

            .verifyOtpBtn,
            .timer {
                margin-top: 32px;
                height: 38px;
                width: 100px;
            }

            .timer {
                background-color: transparent;
                color: black;
                border: none;
            }

            .form button:hover {
                background: rgb(11, 144, 29);
            }

            .hidden {
                display: none !important;
            }

            .visible {
                display: block;
            }

            .visible-flex {
                display: flex !important;
            }

            /*Responsive*/
            @media screen and (max-width: 400px) {
                .form .column {
                    flex-wrap: wrap;
                }

                .form :where(.pmode_option, .pmode) {
                    row-gap: 5px;
                }

                .container2 {
                    padding: 10px;
                }
            }
        </style>
</body>

</html>